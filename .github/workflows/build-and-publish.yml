---
name: build_container

env:
  GITHUB_TOKEN: ${{ github.token }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  pull_request:
  push:
    branches:
      - 'main'
      - 'release/**'
    tag:
      - '*'

jobs:
  build_container:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: configure QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'

      - name: configure buildx
        uses: docker/setup-buildx-action@v2

      - name: login to ghcr.io
        uses: docker/login-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: extract metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/0.1.') }}
            type=raw,value=rc,enable=${{ contains(github.ref, '-rc.') }}
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=raw,value=main,enable=true

      - name: extract tag name
        id: tag
        run: |
          tag=${{ fromJSON(steps.metadata.outputs.json).tags[0] }}
          echo "WAS_UI_TAG=${tag##*:}" >> $GITHUB_OUTPUT

      - name: git describe
        run: echo "WAS_VERSION=$(git describe --always --dirty --tags)" >> $GITHUB_OUTPUT
        id: gd

      - name: build container
        uses: docker/build-push-action@v4
        with:
          build-args: |
            WAS_UI_TAG=${{ steps.tag.outputs.WAS_UI_TAG }}
            WAS_VERSION=${{ steps.gd.outputs.WAS_VERSION }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/riscv64
          push: ${{ github.event_name == 'push' && github.actor != 'dependabot[bot]' }}
          labels: ${{ steps.metadata.outputs.labels }}
          tags: ${{ steps.metadata.outputs.tags }}
